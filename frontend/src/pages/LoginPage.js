import React, { useState, useEffect } from "react";
import { useForm } from "react-hook-form";
import { useNavigate } from "react-router-dom";
import { authService } from "../services/authService";
import { useAuth } from "../context/AuthContext";
import { apiService } from "../services/apiService";
import { urls } from "../constants/urls";

const LoginPage = () => {
  const { register, handleSubmit } = useForm();
  const navigate = useNavigate();
  const { login } = useAuth();
  const [loading, setLoading] = useState(false);

  // –Ø–∫—â–æ —Ç–æ–∫–µ–Ω–∏ –≤–∂–µ —î ‚Äî —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å
  useEffect(() => {
    const tokens = localStorage.getItem("tokens");
    if (tokens) {
      navigate("/profile");
    }
  }, [navigate]);

  const onSubmit = async (credentials) => {
    setLoading(true);

    try {
      // 1. –õ–æ–≥—ñ–Ω ‚Üí –æ—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω–∏
      const tokenData = await authService.login(credentials);

      // 2. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ access —Ç–æ–∫–µ–Ω –≤—Ä—É—á–Ω—É –¥–ª—è getMe (—â–æ–± –Ω–µ –±—É–ª–æ 401)
      const userResponse = await apiService.get(urls.auth.me, {
        headers: { Authorization: `Bearer ${tokenData.access}` },
      });
      const user = userResponse.data;

      // 3. –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç
      login(user, tokenData);

      // 4. –†–µ–¥—ñ—Ä–µ–∫—Ç
      navigate("/profile");
    } catch (err) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ª–æ–≥—ñ–Ω—É:", err);

      const data = err.response?.data;
      let msg = "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ª–æ–≥—ñ–Ω—ñ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –¥–∞–Ω—ñ.";

      if (data) {
        if (data.detail) {
          msg = data.detail;
        } else if (data.non_field_errors) {
          msg = data.non_field_errors.join("\n");
        } else {
          msg = Object.values(data).flat().join("\n");
        }
      }

      alert(msg);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="flex justify-center items-center min-h-[80vh]">
      <div className="bg-gray-900 p-8 rounded-xl shadow-lg w-full max-w-sm">
        <h2 className="text-2xl font-bold text-gray-100 mb-6 text-center">
          –£–≤—ñ–π—Ç–∏
        </h2>
        <form onSubmit={handleSubmit(onSubmit)} className="grid gap-4">
          <input
            type="email"
            placeholder="Email"
            {...register("email", { required: true })}
            className="px-3 py-2 rounded bg-gray-800 text-gray-100 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
          <input
            type="password"
            placeholder="–ü–∞—Ä–æ–ª—å"
            {...register("password", { required: true })}
            className="px-3 py-2 rounded bg-gray-800 text-gray-100 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
          <button
            type="submit"
            disabled={loading}
            className={`bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 rounded shadow transition-colors ${
              loading ? "opacity-70 cursor-not-allowed" : ""
            }`}
          >
            {loading ? "–í—Ö—ñ–¥..." : "–£–≤—ñ–π—Ç–∏"}
          </button>
        </form>
      </div>
    </div>
  );
};

export { LoginPage };


// –¶–µ –ø–µ—Ä–µ—Ö—ñ–¥–Ω–∏–π –∫–æ–¥, –∑ —è–∫–∏–º –ª–æ–≥—ñ–Ω–∞—Ü—ñ—è –ø—Ä–∞—Ü—é–≤–∞–ª–∞!!!!!!:
// import React, { useState, useEffect } from "react";
// import { useForm } from "react-hook-form";
// import { useNavigate } from "react-router-dom";
// import { authService } from "../services/authService";
// import { useAuth } from "../context/AuthContext";
// import { apiService } from "../services/apiService";
//
// const LoginPage = () => {
//   const { register, handleSubmit } = useForm();
//   const navigate = useNavigate();
//   const { login } = useAuth();
//   const [loading, setLoading] = useState(false);
//
//   // –Ø–∫—â–æ —Ç–æ–∫–µ–Ω–∏ –≤–∂–µ —î ‚Äî —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å
//   useEffect(() => {
//     const access = localStorage.getItem("access");
//     const refresh = localStorage.getItem("refresh");
//     console.log("üîé useEffect –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω—ñ–≤:", { access, refresh });
//     if (access && refresh) {
//       console.log("‚û°Ô∏è –¢–æ–∫–µ–Ω–∏ –∑–Ω–∞–π–¥–µ–Ω—ñ ‚Äî —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ /profile");
//       navigate("/profile");
//     }
//   }, [navigate]);
//
//   const onSubmit = async (credentials) => {
//     setLoading(true);
//     console.log("‚û°Ô∏è –ù–∞–¥—Å–∏–ª–∞—é –¥–∞–Ω—ñ —Ñ–æ—Ä–º–∏:", credentials);
//
//     try {
//       const tokenData = await authService.login(credentials);
//       console.log("‚úÖ –¢–æ–∫–µ–Ω–∏ –æ—Ç—Ä–∏–º–∞–Ω—ñ:", tokenData);
//
//       // üîπ –ü—ñ–¥—Å–∞–¥–∂—É—î–º–æ —Ç–æ–∫–µ–Ω —É apiService –ø–µ—Ä–µ–¥ getMe()
//       apiService.defaults.headers.common["Authorization"] = `Bearer ${tokenData.access}`;
//
//       console.log("‚û°Ô∏è –í–∏–∫–ª–∏–∫–∞—é getMe()...");
//       const user = await authService.getMe();
//       console.log("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ—Ç—Ä–∏–º–∞–Ω–∏–π:", user);
//
//       console.log("‚û°Ô∏è –í–∏–∫–ª–∏–∫–∞—é login() –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É...");
//       login(user, tokenData);
//
//       console.log("‚û°Ô∏è –†–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ /profile");
//       navigate("/profile");
//     } catch (err) {
//       console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ª–æ–≥—ñ–Ω—É:", err);
//
//       const data = err.response?.data;
//       let msg = "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ª–æ–≥—ñ–Ω—ñ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –¥–∞–Ω—ñ.";
//
//       if (data) {
//         if (data.detail) {
//           msg = data.detail;
//         } else if (data.non_field_errors) {
//           msg = data.non_field_errors.join("\n");
//         } else {
//           msg = Object.values(data).flat().join("\n");
//         }
//       }
//
//       alert(msg);
//     } finally {
//       setLoading(false);
//     }
//   };
//
//   return (
//     <div className="flex justify-center items-center min-h-[80vh]">
//       <div className="bg-gray-900 p-8 rounded-xl shadow-lg w-full max-w-sm">
//         <h2 className="text-2xl font-bold text-gray-100 mb-6 text-center">
//           –£–≤—ñ–π—Ç–∏
//         </h2>
//         <form onSubmit={handleSubmit(onSubmit)} className="grid gap-4">
//           <input
//             type="email"
//             placeholder="Email"
//             {...register("email", { required: true })}
//             className="px-3 py-2 rounded bg-gray-800 text-gray-100 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
//           />
//           <input
//             type="password"
//             placeholder="–ü–∞—Ä–æ–ª—å"
//             {...register("password", { required: true })}
//             className="px-3 py-2 rounded bg-gray-800 text-gray-100 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
//           />
//           <button
//             type="submit"
//             disabled={loading}
//             className={`bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 rounded shadow transition-colors ${
//               loading ? "opacity-70 cursor-not-allowed" : ""
//             }`}
//           >
//             {loading ? "–í—Ö—ñ–¥..." : "–£–≤—ñ–π—Ç–∏"}
//           </button>
//         </form>
//       </div>
//     </div>
//   );
// };
//
// export { LoginPage };





// import React, { useState, useEffect } from "react";
// import { useForm } from "react-hook-form";
// import { useNavigate } from "react-router-dom";
// import { authService } from "../services/authService";
// import { useAuth } from "../context/AuthContext";
//
// const LoginPage = () => {
//   const { register, handleSubmit } = useForm();
//   const navigate = useNavigate();
//   const { login } = useAuth();
//   const [loading, setLoading] = useState(false);
//
//   // –Ø–∫—â–æ —Ç–æ–∫–µ–Ω–∏ –≤–∂–µ —î ‚Äî —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å
//   useEffect(() => {
//     const access = localStorage.getItem("access");
//     const refresh = localStorage.getItem("refresh");
//     if (access && refresh) {
//       navigate("/profile");
//     }
//   }, [navigate]);
//
//   const onSubmit = async (credentials) => {
//     setLoading(true);
//     try {
//       const tokenData = await authService.login(credentials);
//       const user = await authService.getMe();
//       login(user, tokenData);
//       navigate("/profile");
//     } catch (err) {
//       const data = err.response?.data;
//       let msg = "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ª–æ–≥—ñ–Ω—ñ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –¥–∞–Ω—ñ.";
//
//       if (data) {
//         if (data.detail) {
//           msg = data.detail;
//         } else if (data.non_field_errors) {
//           msg = data.non_field_errors.join("\n");
//         } else {
//           // –ë—É–¥—å-—è–∫—ñ —ñ–Ω—à—ñ –ø–æ–ª—è –∑ –ø–æ–º–∏–ª–∫–∞–º–∏
//           msg = Object.values(data)
//             .flat()
//             .join("\n");
//         }
//       }
//
//       alert(msg);
//     } finally {
//       setLoading(false);
//     }
//   };
//
//   return (
//     <div className="flex justify-center items-center min-h-[80vh]">
//       <div className="bg-gray-900 p-8 rounded-xl shadow-lg w-full max-w-sm">
//         <h2 className="text-2xl font-bold text-gray-100 mb-6 text-center">
//           –£–≤—ñ–π—Ç–∏
//         </h2>
//         <form onSubmit={handleSubmit(onSubmit)} className="grid gap-4">
//           <input
//             type="email"
//             placeholder="Email"
//             {...register("email", { required: true })}
//             className="px-3 py-2 rounded bg-gray-800 text-gray-100 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
//           />
//           <input
//             type="password"
//             placeholder="–ü–∞—Ä–æ–ª—å"
//             {...register("password", { required: true })}
//             className="px-3 py-2 rounded bg-gray-800 text-gray-100 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
//           />
//           <button
//             type="submit"
//             disabled={loading}
//             className={`bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 rounded shadow transition-colors ${
//               loading ? "opacity-70 cursor-not-allowed" : ""
//             }`}
//           >
//             {loading ? "–í—Ö—ñ–¥..." : "–£–≤—ñ–π—Ç–∏"}
//           </button>
//         </form>
//       </div>
//     </div>
//   );
// };
//
// export { LoginPage };


// –ó–≤–µ—Ä—Ö—É –≤—ñ–¥—Ä–µ–¥–∞–≥–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è, —â–æ–± —Å–ø—ñ–≤–ø–∞–¥–∞–ª–∞ –∑ RegistrationPage.
//
// import React, { useState, useEffect } from "react";
// import { useForm } from "react-hook-form";
// import { useNavigate } from "react-router-dom";
// import { authService } from "../services/authService";
// import { useAuth } from "../context/AuthContext";
//
// const LoginPage = () => {
//   const { register, handleSubmit } = useForm();
//   const navigate = useNavigate();
//   const { login } = useAuth();
//   const [error, setError] = useState("");
//   const [loading, setLoading] = useState(false);
//
//   // –Ø–∫—â–æ —Ç–æ–∫–µ–Ω–∏ –≤–∂–µ —î ‚Äî –æ–¥—Ä–∞–∑—É —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å
//   useEffect(() => {
//     const access = localStorage.getItem("access");
//     const refresh = localStorage.getItem("refresh");
//     if (access && refresh) {
//       navigate("/profile");
//     }
//   }, [navigate]);
//
//   const onSubmit = async (credentials) => {
//     setError("");
//     setLoading(true);
//     try {
//       // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω–∏ (access + refresh)
//       const tokenData = await authService.login(credentials);
//
//       // –î—ñ—Å—Ç–∞—î–º–æ —é–∑–µ—Ä–∞
//       const user = await authService.getMe();
//
//       // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ AuthContext
//       login(user, tokenData);
//
//       navigate("/profile");
//     } catch (err) {
//       setError("–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å");
//     } finally {
//       setLoading(false);
//     }
//   };
//
//   return (
//     <div className="flex justify-center items-center min-h-[80vh]">
//       <div className="bg-gray-900 p-8 rounded-xl shadow-lg w-full max-w-sm">
//         <h2 className="text-2xl font-bold text-gray-100 mb-6 text-center">
//           –£–≤—ñ–π—Ç–∏
//         </h2>
//         <form onSubmit={handleSubmit(onSubmit)} className="grid gap-4">
//           <input
//             type="email"
//             placeholder="Email"
//             {...register("email", { required: true })}
//             className="px-3 py-2 rounded bg-gray-800 text-gray-100 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
//           />
//           <input
//             type="password"
//             placeholder="–ü–∞—Ä–æ–ª—å"
//             {...register("password", { required: true })}
//             className="px-3 py-2 rounded bg-gray-800 text-gray-100 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
//           />
//
//           {error && (
//             <p className="text-red-500 text-sm text-center">{error}</p>
//           )}
//
//           <button
//             type="submit"
//             disabled={loading}
//             className={`bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 rounded shadow transition-colors ${
//               loading ? "opacity-70 cursor-not-allowed" : ""
//             }`}
//           >
//             {loading ? "–í—Ö—ñ–¥..." : "–£–≤—ñ–π—Ç–∏"}
//           </button>
//         </form>
//       </div>
//     </div>
//   );
// };
//
// export { LoginPage };
//
//
//
//
// // import React, { useState } from "react";
// // import { useForm } from "react-hook-form";
// // import { useNavigate } from "react-router-dom";
// // import { authService } from "../services/authService";
// // import { useAuth } from "../context/AuthContext";
// //
// // const LoginPage = () => {
// //   const { register, handleSubmit } = useForm();
// //   const navigate = useNavigate();
// //   const { login } = useAuth();
// //   const [error, setError] = useState("");
// //
// //   const onSubmit = async (credentials) => {
// //     setError("");
// //     try {
// //       const tokenData = await authService.login(credentials);
// //       const user = await authService.getMe();
// //       login(user, tokenData);
// //       navigate("/profile");
// //     } catch (err) {
// //       setError("–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å");
// //     }
// //   };
// //
// //   return (
// //     <div className="flex justify-center items-center min-h-[80vh]">
// //       <div className="bg-gray-900 p-8 rounded-xl shadow-lg w-full max-w-sm">
// //         <h2 className="text-2xl font-bold text-gray-100 mb-6 text-center">
// //           –£–≤—ñ–π—Ç–∏
// //         </h2>
// //         <form
// //           onSubmit={handleSubmit(onSubmit)}
// //           className="grid gap-4"
// //         >
// //           <input
// //             type="email"
// //             placeholder="Email"
// //             {...register("email", { required: true })}
// //             className="px-3 py-2 rounded bg-gray-800 text-gray-100 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
// //           />
// //           <input
// //             type="password"
// //             placeholder="–ü–∞—Ä–æ–ª—å"
// //             {...register("password", { required: true })}
// //             className="px-3 py-2 rounded bg-gray-800 text-gray-100 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
// //           />
// //
// //           {error && (
// //             <p className="text-red-500 text-sm text-center">{error}</p>
// //           )}
// //
// //           <button
// //             type="submit"
// //             className="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 rounded shadow transition-colors"
// //           >
// //             –£–≤—ñ–π—Ç–∏
// //           </button>
// //         </form>
// //       </div>
// //     </div>
// //   );
// // };
// //
// // export { LoginPage };