import { apiService } from "./apiService";
import { urls } from "../constants/urls";

const authService = {
  async login(credentials) {
    const response = await apiService.post(urls.auth.login, credentials);

    const { access, refresh } = response.data;
    if (!access || !refresh) {
      throw new Error("–¢–æ–∫–µ–Ω–∏ –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–æ");
    }

    return response.data; // { access, refresh, ... }
  },

  async refreshToken(refresh) {
    if (!refresh) {
      throw new Error("Refresh —Ç–æ–∫–µ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π");
    }

    const response = await apiService.post(urls.auth.refresh, { refresh });
    const { access, refresh: newRefresh } = response.data;

    if (!access) {
      throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω");
    }

    return { access, refresh: newRefresh || refresh };
  },

  async getMe() {
    const response = await apiService.get(urls.auth.me);
    return response.data;
  },

  logout() {
    localStorage.removeItem("tokens");
    localStorage.removeItem("user");
  },
};

export { authService };




// import { apiService } from "./apiService";
// import { urls } from "../constants/urls";
//
// const authService = {
//   async login(user) {
//     const response = await apiService.post(urls.auth.login, user);
//
//     const { access, refresh } = response.data;
//     if (!access || !refresh) throw new Error("–¢–æ–∫–µ–Ω–∏ –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–æ");
//
//     localStorage.setItem("access", access);
//     localStorage.setItem("refresh", refresh);
//
//     return response.data; // { access, refresh }
//   },
//
//   async refreshToken() {
//     const refresh = localStorage.getItem("refresh");
//     if (!refresh) throw new Error("Refresh —Ç–æ–∫–µ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π");
//
//     const response = await apiService.post(urls.auth.refresh, { refresh });
//
//     // –Ø–∫—â–æ –±–µ–∫–µ–Ω–¥ –ø–æ–≤–µ—Ä—Ç–∞—î —ñ refresh ‚Äî –æ–Ω–æ–≤–∏–º–æ –æ–±–∏–¥–≤–∞
//     const { access, refresh: newRefresh } = response.data;
//
//     if (access) {
//       localStorage.setItem("access", access);
//       if (newRefresh) {
//         localStorage.setItem("refresh", newRefresh);
//       }
//       return { access, refresh: newRefresh || refresh };
//     }
//
//     throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω");
//   },
//
//   async getMe() {
//     const response = await apiService.get(urls.auth.me);
//     return response.data;
//   },
//
//   logout() {
//     localStorage.removeItem("access");
//     localStorage.removeItem("refresh");
//     localStorage.removeItem("user"); // üîπ –Ø–∫—â–æ –≤–∏ –∑–±–µ—Ä—ñ–≥–∞–ª–∏ —é–∑–µ—Ä–∞
//   },
//
//   isAuthenticated() {
//     return !!localStorage.getItem("access") && !!localStorage.getItem("refresh");
//   }
// };
//
// export { authService };




// import { apiService } from "./apiService";
// import { urls } from "../constants/urls";
//
// const authService = {
//   async login(user) {
//     const response = await apiService.post(urls.auth.login, user);
//     const access = response.data?.access;
//     if (!access) throw new Error("–¢–æ–∫–µ–Ω –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–æ");
//
//     localStorage.setItem('access', access);
//     return response.data; // { access, refresh }
//   },
//
//   async getMe() {
//     const response = await apiService.get(urls.auth.me);
//     return response.data; // –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
//   },
// };
//
// export { authService };

// import { apiService } from "./apiService";
// import { urls } from "../constants/urls";
//
// const authService = {
//   async login(user) {
//     console.log("üí° login() –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∑:", user);
//
//     try {
//       // –í–∏–∫–ª–∏–∫ API –¥–ª—è –ª–æ–≥—ñ–Ω—É
//       const response = await apiService.post(urls.auth.login, user);
//       console.log("üí° response –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞:", response);
//
//       // –ë–µ–∑–ø–µ—á–Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞
//       const access = response.data?.access;
//       if (!access) {
//         console.error("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–æ!");
//         return undefined;
//       }
//
//       // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –≤ localStorage
//       localStorage.setItem('access', access);
//       console.log("üí° –¢–æ–∫–µ–Ω –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ localStorage:", access);
//
//       // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ–±'—î–∫—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ (–º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ)
//       return response.data;
//     } catch (err) {
//       console.error("‚ùå login() –ø–æ–º–∏–ª–∫–∞:", err);
//       throw err; // –ø–µ—Ä–µ–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –¥–∞–ª—ñ
//     }
//   },
//
//   // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –º–µ—Ç–æ–¥ getMe –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
//   async getMe() {
//     try {
//       const response = await apiService.get(urls.auth.me);
//       console.log("üí° –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", response.data);
//       return response.data;
//     } catch (err) {
//       console.error("‚ùå getMe() –ø–æ–º–∏–ª–∫–∞:", err);
//       throw err;
//     }
//   },
// };
//
// export { authService };

// import { apiService } from "./apiService";
// import { urls } from "../constants/urls";
//
// const authService = {
//   async login(user) {
//     console.log("üí° login() –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∑:", user);
//
//     try {
//       const response = await apiService.post(urls.auth.login, user);
//       console.log("üí° –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ apiService:", response);
//
//       if (!response || !response.data) {
//         console.error("‚ùå response –∞–±–æ response.data –≤—ñ–¥—Å—É—Ç–Ω—ñ–π!");
//         return undefined;
//       }
//
//       const { access } = response.data;
//       console.log("üí° access —Ç–æ–∫–µ–Ω:", access);
//
//       localStorage.setItem('access', access);
//       console.log("üí° —Ç–æ–∫–µ–Ω –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ localStorage");
//
//       return response.data; // –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ–±'—î–∫—Ç
//     } catch (err) {
//       console.error("‚ùå login() –ø–æ–º–∏–ª–∫–∞:", err);
//       throw err; // –ø–µ—Ä–µ–¥–∞—î–º–æ –¥–∞–ª—ñ, —â–æ–± LoginPage –∑–ª–æ–≤–∏–≤
//     }
//   },
// };
//
// export { authService };

// import { apiService } from "./apiService";
// import { urls } from "../constants/urls";
//
// const authService = {
//   async login(user) {
//     const { data } = await apiService.post(urls.auth.login, user);
//
//     // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–æ–∫–µ–Ω –≤ localStorage
//     localStorage.setItem('access', data.access);
//
//     // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ç–æ–∫–µ–Ω (—â–æ–± –π–æ–≥–æ –º–æ–∂–Ω–∞ –±—É–ª–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ)
//     return data;
//   },
// };
//
// export { authService };

// import {apiService} from "./apiService";
// import {urls} from "../constants/urls";
//
// const authService = {
//     async login(user) {
//         const {data: {access}} = await apiService.post(urls.auth.login, user);
//         localStorage.setItem('access', access)
//     },
// }
//
// export {
//     authService
// }